set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" for split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" to enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacevar
nnoremap <space> za

" pep 8 rules
au BufNewFile, BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix

"for html, css and js
au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2
    \ set softtabstop=2
    \ set shiftwidth=2

" for utf-8 support
set encoding=utf-8

let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" for virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
	project_base_dir = os.environ['VIRTUAL_ENV']
	activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
	execfile(activate_this, dict(__file__=activate_this))
EOF

" for making code pretty with highlighting
let python_hightlight_all=1
syntax on

" PLUGINS

" for auto-indentation
Plugin 'vim-scripts/indentpython.vim'
" for python autocomplete
Bundle 'Valloric/YouCompleteMe'
" for syntax checking
Plugin 'scrooloose/syntastic'
"for pep 8 checking
Plugin 'nvie/vim-flake8'
"free tree based file searching
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
"for git 
Plugin 'tpope/vim-fugitive'
"to ignore .pyc files 
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

"for color
Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'

let g:solarized_termcolors=256
set t_Co=256
set background=dark
colorscheme solarized

call togglebg#map("<F5>")
  
" for ctag
set tags=tags


"NERDTREE settings
" for making nerd tree come by default
autocmd vimenter * NERDTree
" for making nerd tree open automtically when no files were selected
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
"open nerd tree when vim tries to open a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
" creating a shorcut to toggle nerdtree 
map <C-n> :NERDTreeToggle<CR>

"Tab configuration
nnoremap tn :tabnew<Space>
"next and prev tab
nnoremap tk :tabnext<CR>
nnoremap tj :tabprev<CR>
"first and last tab
nnoremap th :tabfirst<CR>
nnoremap tl :tablast<CR> 

"for ignoring the .pyc file
set wildignore=*.swp,*.bak,*.pyc


